package com.example.adkgo;

import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.PointF;
import android.util.AttributeSet;
import android.util.Log;
import android.view.View;

public class Controller extends View {
	
	PointF touchPoint;

	// Steering Servo Angle.	0-100 range, with 50 in the middle
	//private int turnAngle = 50;
	public byte getTurnAngle(){return (byte) (int) (100 * (this.getWidth() - touchPoint.x)/this.getWidth());}
	
	// Throttle ESC Servo Angle. 0-100 range, with 50 in the middle
	//private int throttle = 50;
	public byte getThrottle(){return (byte) (int) (100 * (this.getHeight() - touchPoint.y)/this.getHeight());}
	
	public Controller(Context context, AttributeSet attrs) {
		super(context, attrs);	
		touchPoint = new PointF();
	}
	
	public void setup(){
		 touchPoint.set(this.getWidth()/2, this.getHeight()/2);
		 Log.e("SiGH", "TP:!!!! "+this.getWidth() +", "+ touchPoint.y);
		 this.postInvalidate();
	}
	
	private static Paint paint = new Paint(Color.BLUE);

	// Handle the touch	
	public void registerTouch(float X, float Y){
			
		// saturate
		if(X < 0) X = 0;
		if(X > this.getWidth()) X = this.getWidth();
		if(Y < 0) Y = 0;
		if(Y > this.getHeight()) Y = this.getHeight();
		
		touchPoint.set(X, Y);
		this.postInvalidate();
			//turnAngle = (int) (100 * X / this.getWidth());
			//throttle = (int) (100 * Y / this.getHeight());
						
		
	}
	
	@Override
	public void onDraw(Canvas canvas){
		super.onDraw(canvas);
		
		canvas.drawCircle(touchPoint.x, touchPoint.y, 5, paint);
		
	}
	

}
